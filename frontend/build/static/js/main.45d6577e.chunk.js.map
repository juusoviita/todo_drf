{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/TaskList.js","components/AddForm.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","onClick","className","name","Header","title","onAdd","showAdd","defaultProps","Task","task","onDelete","onToggle","onChange","onEdit","reminder","completed","onDoubleClick","id","style","flex","textAlign","due_date","type","checked","cursor","color","TaskList","tasks","map","AddForm","editing","taskToEdit","useState","setTitle","setDuedate","setReminder","editTitle","setEditTitle","editDueDate","setEditDueDate","editReminder","setEditReminder","value","e","target","placeholder","borderColor","currentTarget","preventDefault","alert","App","showAddTask","setShowAddTask","setTasks","setEdit","setTaskToEdit","showComp","setShowComp","useEffect","a","fetch","res","json","data","fetchTasks","fetchTask","url","addTask","newTask","method","headers","body","JSON","stringify","toggleReminder","taskToToggle","updTask","toggleShowComp","filter","completeTask","taskToComplete","compTask","DndProvider","backend","HTML5Backend","FormGroup","FormControlLabel","control","Switch","label","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45d6577e.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ text, onClick }) => {\r\n\r\n  return (\r\n    <button onClick={onClick} className=\"btn btn-warning\" name=\"Add\">{text}</button>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import Button from \"./Button\"\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  return (\r\n    <header>\r\n      <h1>{title}</h1>\r\n      <Button text={showAdd ? 'Hide Form' :  'Add Task'} onClick={onAdd} />\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Todo Tracker',\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\nimport Button from \"./Button\"\r\n \r\nconst Task = ({task, onDelete, onToggle, onChange, onEdit}) => {\r\n\r\n  return (\r\n    <div className={`task-wrapper flex-wrapper ${task.reminder && 'task-reminder' } ${task.completed && 'task-completed' }`} onDoubleClick={() => onToggle(task.id)}>\r\n      <div className={`${task.completed && 'strike-through'}`} style={{flex: 7, textAlign: 'left'}}>{ task.title }</div>\r\n      <div style={{flex: 3, textAlign: 'center'}}>{ task.due_date }</div>\r\n      <div style={{flex: 1}} className=\"task-checkbox\">\r\n        <input type=\"checkbox\" onChange={() => onChange(task.id)} checked={task.completed} style={{cursor: 'pointer'}}></input>\r\n      </div>\r\n      <div style={{flex: 1}}>\r\n        { task.completed === false ? <Button text='Edit' onClick={() => onEdit(task)} /> : '' }\r\n      </div>\r\n      <div style={{flex: 1}}><FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/></div>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst TaskList = ({ tasks, onDelete, onToggle, onChange, onEdit }) => {\r\n\r\n  return (\r\n      <div>\r\n        {tasks.map((task) => (\r\n          <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} onChange={onChange} onEdit={onEdit} />\r\n        ))}\r\n      </div>\r\n    )}\r\n\r\nTaskList.defaultProps = {\r\n  tasks: 'No tasks yet',\r\n}\r\n\r\nexport default TaskList","import { useState } from 'react'\r\nimport Button from \"./Button\"\r\n\r\nconst AddForm = ({ onAdd, editing, taskToEdit }) => {\r\n  \r\n  const [title, setTitle] = useState('')\r\n  const [due_date, setDuedate] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const [editTitle, setEditTitle] = useState(taskToEdit.title)\r\n  const [editDueDate, setEditDueDate] = useState(taskToEdit.due_date)\r\n  const [editReminder, setEditReminder] = useState(taskToEdit.reminder)\r\n\r\n  const onClick = (e) => {\r\n    e.preventDefault()\r\n\r\n    if ( editing === true ) {\r\n      if (!taskToEdit.title) {\r\n        alert('Please add task name')\r\n        return\r\n      }\r\n    } else {\r\n      if (!title) {\r\n        alert('Please add task name')\r\n        return\r\n      }\r\n    }\r\n\r\n    if (editing) {\r\n      const id = taskToEdit.id\r\n      onAdd({ id, editTitle, editDueDate, editReminder })\r\n    } else {\r\n      onAdd({ title, due_date, reminder })\r\n    }\r\n\r\n    setTitle('')\r\n    setDuedate('')\r\n    setReminder(false)\r\n  \r\n    setEditReminder('')\r\n    setDuedate('')\r\n    setReminder('')\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <div id=\"form-wrapper\">\r\n        <div className=\"flex-wrapper\">\r\n          <div style={{flex: 2, textAlign: 'left'}}>\r\n            <label>Task:</label>\r\n          </div>\r\n          <div style={{flex: 5}}>\r\n            { editing ? \r\n              <input className=\"form-control\" type=\"text\" value={editTitle} onChange={(e) => setEditTitle(e.target.value)} /> : \r\n              <input className=\"form-control\" type=\"text\" placeholder=\"Add task\" value={title} onChange={(e) => setTitle(e.target.value)} /> }\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-wrapper\">\r\n          <div style={{flex: 2, textAlign: 'left'}}>\r\n            <label>Date & Time:</label>\r\n          </div>\r\n          <div style={{flex: 5}}>\r\n            { editing ? \r\n            <input className=\"form-control\" type=\"text\" value={editDueDate} onChange={(e) => setEditDueDate(e.target.value)} /> :\r\n            <input className=\"form-control\" type=\"text\" placeholder=\"Add Date & Time\" value={due_date} onChange={(e) => setDuedate(e.target.value)} />\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-wrapper\">\r\n          <div style={{flex: 2, textAlign: 'left'}}>\r\n            <label>Set Reminder:</label>\r\n          </div>\r\n          <div style={{flex: 5, borderColor: 'gray', textAlign:'left'}}>\r\n            { editing ? \r\n            <input className=\"form-control-check\" type=\"checkbox\" checked={editReminder} value={reminder} onChange={(e) => setEditReminder(e.target.value)} /> :\r\n            <input className=\"form-control-check\" type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            }\r\n          </div>\r\n        </div>\r\n        <div style={{flex: 1}}>\r\n          <Button text='Save Task' onClick={onClick} />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddForm\r\n","import './App.css';\nimport { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport TaskList from './components/TaskList'\nimport AddForm from './components/AddForm'\nimport { Switch, FormGroup, FormControlLabel } from '@mui/material';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n  const [editing, setEdit] = useState(false)\n  const [taskToEdit, setTaskToEdit] = useState({})\n  const [showComp, setShowComp] = useState(true)\n\n  //Fetch all tasks\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:8000/api/task-list/')\n      const data = await res.json()\n\n      setTasks(data)\n    }\n\n    fetchTasks()\n  }, [])\n\n\n  //Fetch a single task\n  const fetchTask = async (id) => {\n    var url = `http://localhost:8000/api/task-detail/${id}`\n    const res = await fetch(url)\n    const data = await res.json()\n\n    return data\n  } \n\n\n  // All the functions to Add or Delete tasks will be added to this file \n  // Add a New Task or Edit an existing Task\n  const addTask = async (task) => {\n\n    if (editing === false) {\n      const id = ''\n      const newTask = {id, ...task}\n\n      var url = 'http://localhost:8000/api/task-create/'\n\n      // Made async so that the new task is rendered with an id from the start\n      const res = await fetch(url, {\n        method: 'POST',\n        headers:{\n          'Content-type':'application/json'\n        },\n        body:JSON.stringify(newTask)\n      })\n\n      const data = await res.json()\n\n      setTasks([...tasks, data])\n    } else {\n\n      const id = task.id\n      var url = `http://localhost:8000/api/task-update/${id}/`\n\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-type':'application/json'\n        },\n        body: JSON.stringify({\n          id: task.id,\n          title: task.editTitle,\n          due_date: task.editDueDate,\n          reminder: task.editReminder,\n        })\n      })\n\n      const data = await res.json()\n\n      setTasks(tasks.map((task) => task.id === id ? {...task, title: data.title, due_date: data.due_date, reminder: data.reminder } : task ))\n\n      setEdit(false)\n      setTaskToEdit({})\n    }\n    setShowAddTask(false)\n  }\n  \n  // Delete Task\n  const deleteTask = (id) => {\n\n    var url = `http://localhost:8000/api/task-delete/${id}`\n\n    fetch(url, {\n      method: 'DELETE',\n      headers:{\n        'Content-type':'application/json'\n      },\n    })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    var url = `http://localhost:8000/api/task-update/${id}/`\n\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n  }\n\n  // Toggle Show Completed\n  const toggleShowComp = async () => {\n    setShowComp(!showComp)\n    if (showComp) {\n      setTasks(tasks.filter((task) => !task.completed && task ))\n    } else {\n      const res = await fetch('http://localhost:8000/api/task-list/')\n      const data = await res.json()\n      setTasks(data)\n    }\n  }\n\n\n  // Start Editing Task\n  const startEdit = (task) => {\n    setTaskToEdit({...task})\n    setEdit(true)\n    setShowAddTask(true)\n  }\n\n  // Complete Task\n  const completeTask = async (id) => {\n    \n    const taskToComplete = await fetchTask(id)\n    const compTask = { ...taskToComplete, completed: !taskToComplete.completed }\n\n    var url = `http://localhost:8000/api/task-update/${id}/`\n\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(compTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(tasks.map((task) => task.id === id ? {...task, completed: data.completed} : task))\n  }\n\n  // Show/hide the AddForm and clear editing and taskToEdit, if needed\n  const showAddForm = () => {\n    if (showAddTask === true) {\n      setShowAddTask(false)\n      if (editing === true) {\n        setEdit(false)\n        setTaskToEdit({})\n      }\n    } else {\n      setShowAddTask(true)\n    }\n  }\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"App\">\n        <div className=\"container\">\n          <div id=\"task-container\">\n            <Header onAdd={showAddForm} showAdd={showAddTask} />\n            { showAddTask && <AddForm onAdd={addTask} editing={editing} taskToEdit={taskToEdit} />}\n            <FormGroup id=\"form-group\">\n              <FormControlLabel control={<Switch checked={showComp} onChange={toggleShowComp} color=\"warning\" />} label=\"Show completed\" />\n            </FormGroup>\n          </div>\n          {tasks.length > 0 ? <TaskList tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} onChange={completeTask} onEdit={startEdit} /> : 'No tasks yet'}\n        </div>\n      </div>\n    </DndProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}